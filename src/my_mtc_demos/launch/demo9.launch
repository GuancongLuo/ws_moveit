<?xml version="1.0"?>

<launch>

  <!-- ============== Load URDF, SRDF, .yaml as params ============= -->
  <include file="$(find panda_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- =============== TF : world -> panda_link0 ================= -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(anon virtual_joint_broadcaster)" args="0 0 0 0 0 0 world panda_link0" />

  <!-- =============== fake joint_state_publisher ================ -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>   <!--*** changed to true ***-->
    <param name="rate" value="50"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>

  <!-- ========== ?? ========== -->
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

  <!-- ========== robot_state_publisher for tf for rviz =============== -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- =============== Load ExecuteTaskSolutionCapability to execute found solutions in simulation =============== -->
  <param name="move_group/capabilities" value="move_group/ExecuteTaskSolutionCapability" />
  
  <!-- =============== move_group =============== -->
  <include file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- =================== Rviz ================= -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" args="-d $(find moveit_task_constructor_demo)/config/mtc9.rviz">
    <rosparam command="load" file="$(find panda_moveit_config)/config/kinematics.yaml"/>
  </node>
                                                                                                        <!-- x y z y(z') p(y') r(x') -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="$(anon virtual_joint_broadcaster2)" args="0 0 0.11 1.571 0 0 panda_hand panda_endZ" /> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="$(anon virtual_joint_broadcaster6)" args="0 0 0.22 1.571 -1.571 0 panda_hand panda_endZY" /> -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="$(anon virtual_joint_broadcaster1)" args="0 0 0.10 1.571 -1.571 1.571 panda_hand panda_end" /> <!-- ZYX -->

  <node pkg="tf2_ros" type="static_transform_publisher" name="$(anon virtual_joint_broadcaster2)" args="0 0 0 -1.571 1.571 -1.571 world panda_constraint_frame" /> <!-- ZYX -->

</launch>
